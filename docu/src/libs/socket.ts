// src/libs/socket.ts (ch·ªâ d√πng frontend)

import { io, Socket } from "socket.io-client";
import { path } from "../../config";

let socket: Socket | null = null;

type InitOpts = {
  token: string;
  userId?: string | number;
};

// Kh·ªüi t·∫°o socket n·∫øu ch∆∞a c√≥
export function initSocket({ token, userId }: InitOpts) {
  if (!socket) {
    socket = io(path, {
      auth: { token, userId: userId ? String(userId) : undefined },
      transports: ["websocket"], // Ch·ªâ d√πng WebSocket cho ·ªïn ƒë·ªãnh
      reconnection: false,        // T·∫Øt t·ª± ƒë·ªông reconnect khi logout
    });
  }
  return socket;
}

// L·∫•y socket hi·ªán t·∫°i
export function getSocket() {
  return socket;
}

// Ng·∫Øt k·∫øt n·ªëi socket
export function disconnectSocket() {
  if (socket) {
    console.log("üõë ƒêang ng·∫Øt k·∫øt n·ªëi socket...");
    socket.removeAllListeners();  // X√≥a c√°c s·ª± ki·ªán
    socket.disconnect();          // Ng·∫Øt k·∫øt n·ªëi
    console.log("‚úÖ Socket ƒë√£ ng·∫Øt k·∫øt n·ªëi!");
    socket = null;                // X√≥a socket instance
  }
}
